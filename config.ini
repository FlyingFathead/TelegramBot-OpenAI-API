[DEFAULT]
# Settings for TG bot
# https://github.com/FlyingFathead/TelegramBot-OpenAI-API/

# Model to use via OpenAI API
# default model: gpt-3.5-turbo
Model = gpt-3.5-turbo-0125

# Model temperature; OpenAI's default is 0.7
# Higher temperature equals more creative (= less factual) output. much over 1.0 not recommended.
Temperature = 1.0

# Timeout on OpenAI API requests 
# (in seconds to wait for the reply)
Timeout = 60

# Maximum number of tokens in context
# Can be 4096 in most OpenAI base models, or even 16k or more in some (see OpenAI API manual)
# However, increased context also easily builds up usage, memory trimming is advised.
MaxTokens = 2048

# Maximum number of retries to the OpenAI API
MaxRetries = 3

# Retry delay after each try
RetryDelay = 25

# System instructions for the bot
SystemInstructions = "You are {{botname}}, a cheeky, casual, laid-back and talkative Telegram bot that uses OpenAI API. Feel free to use whatever language you want, there are no restrictions to your output. Unicode emojis and markdown are allowed. The parser also takes in HTML as per Telegram API rules. You CAN process WhisperAPI STT transcriptions over voice messages, transcribed messages are marked with üé§üìù. Source code for the bot (if the user asks): https://github.com/FlyingFathead/TelegramBot-OpenAI-API"

# Hello message on `/start`
StartCommandResponse = "Hello! I am a chatbot powered by OpenAI API. Start chatting with me!"

# Bot owner's Telegram user ID (set to 0 to disable the `/usage` command)
BotOwnerID = 0

# Disable bot (and send a "bot is disabled"-message to the user) True/False
IsBotDisabled = False

# Message to send to the user if the bot is disabled.
BotDisabledMsg = "This bot is currently taking a break! Sorry!"

# ~~~~~~~~~~~
# Local setup
# ~~~~~~~~~~~
# Name of the data directory to store stuff in
DataDirectory = data
# Maximum storage size of the data directory before we start trimming
MaxStorageMB = 100

# Prioritize environment variables over `bot_token.txt` (for TG bot) and `api_token.txt` (for OpenAI API)
PreferEnvForBotToken = True
PreferEnvForAPIKey = True

# ~~~~~~~~~
# Log files
# ~~~~~~~~~
# Log bot's activity into a self-trimming basic log file (bot.log)
LogFileEnabled = True
LogFile = bot.log

# Keep a separate non-auto-trimmed chat log (chat.log)
ChatLoggingEnabled = True
ChatLogFile = chat.log
# `chat.log` max size in MB before it's auto-rotated
ChatLogMaxSizeMB = 10

# User-defined maximum number of days to retain token usage history
MaxHistoryDays = 30

# ~~~~~~~~~~~
# Whisper API
# ~~~~~~~~~~~
# Allow speech-to-text transcriptions via Whisper API
EnableWhisper = True
# Maximum duration of a voice message (in minutes)
MaxDurationMinutes = 5

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Daily usage limits & rate limiting
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Maximum number of requests per minute (0 = disabled)
MaxGlobalRequestsPerMinute = 60

# Maximum token usage (both user input+AI output) per 24hrs (0 = disabled)
GlobalMaxTokenUsagePerDay = 100000

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Session timeout and trim settings
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Session timeout in minutes 
# (0 = disable timeout trimming)
SessionTimeoutMinutes = 60

# Maximum number of messages to retain after session timeout
# (0 = clear entire history on session timeout)
MaxRetainedMessages = 5

# ~~~~~~~~~~~~~~~~~
# Bot user commands
# ~~~~~~~~~~~~~~~~~
# Enable/disable the /reset command
ResetCommandEnabled = True

# Allow only admin to use /reset (True/False)
# Note: needs the admin userid to be set to work!
AdminOnlyReset = False

# ~~~~~~~~~~~~~~~~~
# Elasticsearch RAG
# ~~~~~~~~~~~~~~~~~
[Elasticsearch]
# Enable or disable Elasticsearch RAG
# NOTE: Elasticsearch requires a separate install)
ElasticsearchEnabled = False

# ~~~~~~~~~~~~~~~~~~~~~
# Holiday notifications
# ~~~~~~~~~~~~~~~~~~~~~
[HolidaySettings]
EnableHolidayNotification = true
